version: "3.8"

services:
  bot:
    build: 
      context: ./bot/
      cache_from:
        - python:3.8-slim
        - python:3.8-alpine
      target: prod
    env_file:
      - bot.env
      - database.env
    volumes: 
      - type: volume
        source: proxy-data
        target: /proxy-data
        read_only: true
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
        window: 15s
    depends_on: 
      - db

  picker:
    build: ./picker/
    env_file:
      - database.env
    deploy:
      restart_policy:
        condition: on-failure
        delay: 20s
        max_attempts: 10
        window: 30s

  proxyFinder:
    build: 
      context: ./proxyFinder/
      cache_from:
        - python:3.8
        - python:3.8-alpine
      target: prod
    restart: on-failure
    volumes: 
      - proxy-data:/proxy-data
    environment: 
      PROXY_DIR: '/proxy-data/'

  db:
    image: postgres:13-alpine
    restart: always
    env_file:
      - database.env
    expose:
      - "5432"
    volumes:
      - db-data:/var/lib/postgresql/data

volumes:
  db-data:
  proxy-data:
